!obj:pylearn2.train.Train {
 dataset: !obj:pylearn2.datasets.csv_dataset.CSVDataset &train {
  path: '/home/dean/git/kaggle/forest_cover/train_dataset.csv',
  one_hot: 1
 },
 model: !obj:pylearn2.models.mlp.MLP {
  layers: [ 
   !obj:pylearn2.models.mlp.RectifiedLinear {
    layer_name: 'h0',
    dim: 1200,
    irange: 0.05
   }, !obj:pylearn2.models.mlp.RectifiedLinear {
    layer_name: 'h1',
    dim: 1200,
    irange: 0.05
   }, !obj:pylearn2.models.mlp.Softmax {
    layer_name: 'y',
    n_classes: 7,
    irange: 0.
   }
  ],
  nvis: 57
 },
 algorithm : !obj:pylearn2.training_algorithms.sgd.SGD {
  batch_size: 100,
  learning_rate: .01,
  monitoring_dataset: {
   'train': *train,
   'valid': !obj:pylearn2.datasets.csv_dataset.CSVDataset {
     path: '/home/dean/git/kaggle/forest_cover/valid_dataset.csv',
     one_hot: 1
   }
  },
  learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
   init_momentum : .5
  },
  termination_criterion: !obj:pylearn2.termination_criteria.And {
   criteria: [
    !obj:pylearn2.termination_criteria.MonitorBased {
     channel_name: "valid_y_misclass",
     prop_decrease : 0.,
     N : 10
    },
    !obj:pylearn2.termination_criteria.EpochCounter {
     max_epochs: 10000
    }
   ]
  }
 },
 extensions : [ 
  !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
   start: 1,
   saturate: 10,
   final_momentum: .99
  }
 ]
}